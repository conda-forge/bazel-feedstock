From cba7cfa9063f4d152bf495fa56ea501bd666d666 Mon Sep 17 00:00:00 2001
From: Tanvi Jagtap <tjagtap@google.com>
Date: Sun, 9 Jun 2024 20:00:08 -0700
Subject: [PATCH 13/13] Removing redundant function null_grpc_log_function

After the submission of https://github.com/bazelbuild/bazel/commit/aa480481726efb5def0c1ce2a3e07584bf11b507 , we don't need to use this custom logging function null_grpc_log_function . This code is now redundant. Deleting it will prevent confusion in the future.

PiperOrigin-RevId: 641765826
Change-Id: Id3fdcce72b1f459e7f29f52f3d9f4e9acf1a6253
---
 src/main/cpp/blaze.cc | 7 -------
 1 file changed, 7 deletions(-)

diff --git a/src/main/cpp/blaze.cc b/src/main/cpp/blaze.cc
index de31219c4f..fd5493faed 100644
--- a/src/main/cpp/blaze.cc
+++ b/src/main/cpp/blaze.cc
@@ -29,7 +29,6 @@
 #include <ctype.h>
 #include <fcntl.h>
 #include <grpc/grpc.h>
-#include <grpc/support/log.h>
 #include <grpcpp/channel.h>
 #include <grpcpp/client_context.h>
 #include <grpcpp/create_channel.h>
@@ -1539,8 +1538,6 @@ int Main(int argc, const char *const *argv, WorkspaceLayout *workspace_layout,
   return 0;
 }
 
-static void null_grpc_log_function(gpr_log_func_args *args) {}
-
 // There might be a mismatch between std::string and the string type returned
 // from protos. This function is the safe way to compare such strings.
 template <typename StringTypeA, typename StringTypeB>
@@ -1562,10 +1559,6 @@ BlazeServer::BlazeServer(const StartupOptions &startup_options)
       block_for_lock_(startup_options.block_for_lock),
       preemptible_(startup_options.preemptible),
       output_base_(startup_options.output_base) {
-  if (!startup_options.client_debug) {
-    gpr_set_log_function(null_grpc_log_function);
-  }
-
   pipe_.reset(blaze_util::CreatePipe());
   if (!pipe_) {
     BAZEL_DIE(blaze_exit_code::LOCAL_ENVIRONMENTAL_ERROR)
